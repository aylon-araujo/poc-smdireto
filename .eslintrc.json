{
  "env": {
    "browser": true,
    "es2021": true,
    "jest": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:prettier/recommended",
    "plugin:storybook/recommended",
    "plugin:react/jsx-runtime",
    "plugin:@typescript-eslint/recommended",
    "plugin:jest/recommended",
    "plugin:import/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:sonarjs/recommended"
  ],
  "ignorePatterns": ["cypress/**/*"],
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "overrides": [
    {
      "files": ["tests/**/*.ts", "tests/**/*.tsx"],
      "env": {
        "jest": true
      },
      "extends": ["plugin:jest/recommended"],
      "plugins": ["jest"]
    }
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.lint.json",
    "tsconfigRootDir": "./"
  },
  "plugins": [
    "react",
    "prettier",
    "react-hooks",
    "@typescript-eslint",
    "jest",
    "import",
    "sonarjs"
  ],
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": "./tsconfig.lint.json"
      }
    }
  },
  "rules": {
    "sonarjs/cognitive-complexity": ["warn", 30],
    "react/react-in-jsx-scope": "off",
    "react-hooks/exhaustive-deps": "off",
    "import/prefer-default-export": 0,
    "import/no-named-as-default": 0,
    "import/no-unresolved": 0,
    "import/no-extraneous-dependencies": 0,
    "import/extensions": 0,
    "import/order": [
      "error",
      {
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        },
        "groups": [
          "external",
          "builtin",
          "internal",
          ["parent", "sibling", "index"]
        ],
        "pathGroups": [
          {
            "pattern": "@/**",
            "group": "internal",
            "position": "after"
          }
        ]
      }
    ],
    "import/no-unresolved": "error",
    "sort-imports": ["error", { "ignoreDeclarationSort": true }],
    "sonarjs/no-duplicate-string": "warn",
    "sonarjs/no-small-switch": "warn"
  }
}
